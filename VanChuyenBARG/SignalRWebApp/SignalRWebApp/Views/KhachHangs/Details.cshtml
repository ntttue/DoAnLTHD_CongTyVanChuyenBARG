@model SignalRWebApp.Models.KhachHang

@{
    ViewBag.Title = "Details";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
    }

    #floating-panel {
        /*position: absolute;
        top: 10px;
        left: 25%;*/
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }
</style>
<div class="row panel panel-default">
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3>Khách hàng</h3>

            </div>
            <div class="panel-body ">
                <div class="col-sm-12">
                    <dl class="dl-horizontal col-sm-6">
                        <dt>Họ tên: </dt>
                        <dd>@Html.DisplayFor(model => model.HoTen)</dd>

                        <dt>Địa chỉ đón: </dt>
                        <dd>@Html.DisplayFor(model => model.DiaChiDon)</dd>

                        <dt>Ghi chú:</dt>
                        <dd>@Html.DisplayFor(model => model.GhiChu)</dd>

                        <dt>Thời điểm đặt: </dt>
                        <dd>@Html.DisplayFor(model => model.ThoiDiemDat)</dd>

                    </dl>
                    <dl class="dl-horizontal col-sm-6">
                        <dt>SĐT: </dt>
                        <dd>@Html.DisplayFor(model => model.SDT)</dd>

                        <dt>Loại xe: </dt>
                        <dd>
                            @if (Model.LoaiXe == 1)
                            {
                            <span>PREMIUM</span>
                            }
                            else
                            {
                            <span>Thường</span>
                            }
                        </dd>
                        <dt>Tình trạng: </dt>
                        <dd>@Html.DisplayFor(model => model.TinhTrang)</dd>
                    </dl>
                </div>

                <div class="col-sm-12 text-center">
                    @Html.ActionLink("Edit", "Edit", new { id = Model.id }, htmlAttributes: new { @class = "btn btn-primary" })
                    @Html.ActionLink("Trở về danh sách", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                </div>
            </div>

        </div>
    </div>
    <div class="row-fluid">
        <div id="floating-panel">
            <input id="address" type="textbox" value="@Model.DiaChiDon">
            <input id="submit" type="button" value="Geocode">

            <h2>Map</h2>
            <div id="map" style="width: auto; height:600px;">

            </div>
        </div>
    </div>
</div>

<script>
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 18,
            center: { lat: 10.756582, lng: 106.630871 }
        });
        var geocoder = new google.maps.Geocoder();

        geocodeAddress(geocoder, map);

        document.getElementById('submit').addEventListener('click', function () {
            geocodeAddress(geocoder, map);
        });


        var locations = [];
        $.ajax({
            type: 'post',
            dataType: 'json',
            url: '/KhachHangs/GetListTaiXe',
            success: function (result) {
                for (var i = 0; i < result.length; i++) {
                    var data = [];
                    data.push(result[i].HoTen);
                    data.push(result[i].Lat);
                    data.push(result[i].Lng);
                    data.push(result[i].id);
                    locations.push(data);
                }

                //add marker
                var infowindow = new google.maps.InfoWindow();
                var marker, i;
                for (i = 0; i < locations.length; i++) {
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                        map: map,
                        icon: "/img/user-17-48.png"
                    });

                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent(locations[i][0]);
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
                }
            }
        });
        //------ end add marker-------
    }

    function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: resultsMap,
                    draggable: true,
                    animation: google.maps.Animation.DROP,
                    position: results[0].geometry.location
                });
                marker.addListener('click', toggleBounce);
                function toggleBounce() {
                    if (marker.getAnimation() !== null) {
                        marker.setAnimation(null);
                    } else {
                        marker.setAnimation(google.maps.Animation.BOUNCE);
                    }
                }
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });

    }

</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD8u6C5mpjI26xXY8Pa8UEnaoSDSWSVKY8&callback=initMap">
</script>
